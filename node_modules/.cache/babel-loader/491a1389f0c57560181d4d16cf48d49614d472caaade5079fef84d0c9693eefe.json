{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchEmployees } from \"../../utils/utils\";\nexport const employeeSlice = createSlice({\n  name: \"employee\",\n  initialState: {\n    employees: [],\n    status: \"idle\",\n    error: null,\n    statusMessage: null\n  },\n  reducers: {\n    fetchEmployeesStart: state => {\n      state.status = \"loading\";\n      state.error = null;\n      state.statusMessage = null;\n    },\n    fetchEmployeesSuccess: (state, action) => {\n      state.status = \"succeeded\";\n      state.employees = action.payload;\n      state.statusMessage = \"Employees fetched successfully\";\n    },\n    fetchEmployeesFailure: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      state.statusMessage = \"Failed to fetch employees\";\n    }\n  }\n});\nexport const {\n  fetchEmployeesStart,\n  fetchEmployeesSuccess,\n  fetchEmployeesFailure\n} = employeeSlice.actions;\nexport const fetchEmployeesAsync = () => async dispatch => {\n  try {\n    dispatch(fetchEmployeesStart());\n    const response = await fetchEmployees();\n    dispatch(fetchEmployeesSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchEmployeesFailure(error.message));\n  }\n};\nexport default employeeSlice.reducer;","map":{"version":3,"names":["createSlice","fetchEmployees","employeeSlice","name","initialState","employees","status","error","statusMessage","reducers","fetchEmployeesStart","state","fetchEmployeesSuccess","action","payload","fetchEmployeesFailure","actions","fetchEmployeesAsync","dispatch","response","data","message","reducer"],"sources":["C:/Users/33754/OneDrive/Bureau/OpenClassroom/P14 Wealth Health/P14_front/P14-WealthHealth-front/src/features/Slice/employees.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchEmployees } from \"../../utils/utils\";\r\n\r\nexport const employeeSlice = createSlice({\r\n\tname: \"employee\",\r\n\tinitialState: {\r\n\t\temployees: [],\r\n\t\tstatus: \"idle\",\r\n\t\terror: null,\r\n\t\tstatusMessage: null,\r\n\t},\r\n\treducers: {\r\n\t\tfetchEmployeesStart: (state) => {\r\n\t\t\tstate.status = \"loading\";\r\n\t\t\tstate.error = null;\r\n\t\t\tstate.statusMessage = null;\r\n\t\t},\r\n\t\tfetchEmployeesSuccess: (state, action) => {\r\n\t\t\tstate.status = \"succeeded\";\r\n\t\t\tstate.employees = action.payload;\r\n\t\t\tstate.statusMessage = \"Employees fetched successfully\";\r\n\t\t},\r\n\t\tfetchEmployeesFailure: (state, action) => {\r\n\t\t\tstate.status = \"failed\";\r\n\t\t\tstate.error = action.payload;\r\n\t\t\tstate.statusMessage = \"Failed to fetch employees\";\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tfetchEmployeesStart,\r\n\tfetchEmployeesSuccess,\r\n\tfetchEmployeesFailure,\r\n} = employeeSlice.actions;\r\n\r\nexport const fetchEmployeesAsync = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch(fetchEmployeesStart());\r\n\t\tconst response = await fetchEmployees();\r\n\t\tdispatch(fetchEmployeesSuccess(response.data));\r\n\t} catch (error) {\r\n\t\tdispatch(fetchEmployeesFailure(error.message));\r\n\t}\r\n};\r\n\r\nexport default employeeSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,mBAAmB;AAElD,OAAO,MAAMC,aAAa,GAAGF,WAAW,CAAC;EACxCG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACbC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,IAAI;IACXC,aAAa,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACTC,mBAAmB,EAAGC,KAAK,IAAK;MAC/BA,KAAK,CAACL,MAAM,GAAG,SAAS;MACxBK,KAAK,CAACJ,KAAK,GAAG,IAAI;MAClBI,KAAK,CAACH,aAAa,GAAG,IAAI;IAC3B,CAAC;IACDI,qBAAqB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzCF,KAAK,CAACL,MAAM,GAAG,WAAW;MAC1BK,KAAK,CAACN,SAAS,GAAGQ,MAAM,CAACC,OAAO;MAChCH,KAAK,CAACH,aAAa,GAAG,gCAAgC;IACvD,CAAC;IACDO,qBAAqB,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACzCF,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACH,aAAa,GAAG,2BAA2B;IAClD;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EACZE,mBAAmB;EACnBE,qBAAqB;EACrBG;AACD,CAAC,GAAGb,aAAa,CAACc,OAAO;AAEzB,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACHA,QAAQ,CAACR,mBAAmB,CAAC,CAAC,CAAC;IAC/B,MAAMS,QAAQ,GAAG,MAAMlB,cAAc,CAAC,CAAC;IACvCiB,QAAQ,CAACN,qBAAqB,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOb,KAAK,EAAE;IACfW,QAAQ,CAACH,qBAAqB,CAACR,KAAK,CAACc,OAAO,CAAC,CAAC;EAC/C;AACD,CAAC;AAED,eAAenB,aAAa,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}