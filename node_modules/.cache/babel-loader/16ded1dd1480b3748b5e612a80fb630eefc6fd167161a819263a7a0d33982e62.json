{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchEmployees = createAsyncThunk(\"employees/fetchEmployees\", async () => {\n  const response = await axios.get(\"http://localhost:3003/getAllEmployees/\");\n  return response.data;\n});\n\n// Slice pour gérer les employés\nconst employeeSlice = createSlice({\n  name: \"employees\",\n  initialState: {\n    employees: [],\n    status: \"idle\",\n    error: null,\n    statusMessage: null\n  },\n  reducers: {\n    fetchEmployeesStart: state => {\n      state.status = \"loading\";\n      state.error = null;\n      state.statusMessage = null;\n    },\n    fetchEmployeesSuccess: (state, action) => {\n      state.status = \"succeeded\";\n      state.employees = action.payload;\n      state.statusMessage = \"Employees fetched successfully\";\n    },\n    fetchEmployeesFailure: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n      state.statusMessage = \"Failed to fetch employees\";\n    }\n  }\n});\nexport default employeeSlice.reducer;\nexport const {\n  fetchEmployeesStart,\n  fetchEmployeesSuccess,\n  fetchEmployeesFailure\n} = employeeSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchEmployees","response","get","data","employeeSlice","name","initialState","employees","status","error","statusMessage","reducers","fetchEmployeesStart","state","fetchEmployeesSuccess","action","payload","fetchEmployeesFailure","reducer","actions"],"sources":["C:/Users/33754/OneDrive/Bureau/OpenClassroom/P14 Wealth Health/P14_front/P14-WealthHealth-front/src/features/Slice/employees.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchEmployees = createAsyncThunk(\r\n\t\"employees/fetchEmployees\",\r\n\tasync () => {\r\n\t\tconst response = await axios.get(\"http://localhost:3003/getAllEmployees/\");\r\n\t\treturn response.data;\r\n\t}\r\n);\r\n\r\n// Slice pour gérer les employés\r\nconst employeeSlice = createSlice({\r\n\tname: \"employees\",\r\n\tinitialState: {\r\n\t\temployees: [],\r\n\t\tstatus: \"idle\",\r\n\t\terror: null,\r\n\t\tstatusMessage: null,\r\n\t},\r\n\treducers: {\r\n\t\tfetchEmployeesStart: (state) => {\r\n\t\t\tstate.status = \"loading\";\r\n\t\t\tstate.error = null;\r\n\t\t\tstate.statusMessage = null;\r\n\t\t},\r\n\t\tfetchEmployeesSuccess: (state, action) => {\r\n\t\t\tstate.status = \"succeeded\";\r\n\t\t\tstate.employees = action.payload;\r\n\t\t\tstate.statusMessage = \"Employees fetched successfully\";\r\n\t\t},\r\n\t\tfetchEmployeesFailure: (state, action) => {\r\n\t\t\tstate.status = \"failed\";\r\n\t\t\tstate.error = action.payload;\r\n\t\t\tstate.statusMessage = \"Failed to fetch employees\";\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default employeeSlice.reducer;\r\n\r\nexport const {\r\n\tfetchEmployeesStart,\r\n\tfetchEmployeesSuccess,\r\n\tfetchEmployeesFailure,\r\n} = employeeSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAC7C,0BAA0B,EAC1B,YAAY;EACX,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,wCAAwC,CAAC;EAC1E,OAAOD,QAAQ,CAACE,IAAI;AACrB,CACD,CAAC;;AAED;AACA,MAAMC,aAAa,GAAGP,WAAW,CAAC;EACjCQ,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACbC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,IAAI;IACXC,aAAa,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACTC,mBAAmB,EAAGC,KAAK,IAAK;MAC/BA,KAAK,CAACL,MAAM,GAAG,SAAS;MACxBK,KAAK,CAACJ,KAAK,GAAG,IAAI;MAClBI,KAAK,CAACH,aAAa,GAAG,IAAI;IAC3B,CAAC;IACDI,qBAAqB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACzCF,KAAK,CAACL,MAAM,GAAG,WAAW;MAC1BK,KAAK,CAACN,SAAS,GAAGQ,MAAM,CAACC,OAAO;MAChCH,KAAK,CAACH,aAAa,GAAG,gCAAgC;IACvD,CAAC;IACDO,qBAAqB,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACzCF,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACH,aAAa,GAAG,2BAA2B;IAClD;EACD;AACD,CAAC,CAAC;AAEF,eAAeN,aAAa,CAACc,OAAO;AAEpC,OAAO,MAAM;EACZN,mBAAmB;EACnBE,qBAAqB;EACrBG;AACD,CAAC,GAAGb,aAAa,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}